# => Create a task and poll for the status
---
- name: Create a task and poll for the status
  hosts: localhost
  gather_facts: false
  become: false
  collections:
    - cohesity.dataprotect
  tasks:
    - name: Restore VMs
      cohesity_migrate_vm:
        cluster: "{{ cohesity_server }}"
        username: "{{ cohesity_username }}"
        password: "{{ cohesity_password }}"
        validate_certs: "{{ cohesity_validate_certs }}"
        name: "Testing"
        job_vm_pair:
          job_name_1:
            - VM1
          job_name_2:
            - VM2
            - VM3
        state: "present"
        datacenter: Datacenter
        cluster_compute_resource: Cluster1
        network_name: "VLAN"
        preserve_mac_address: true
        enable_network: false
        vm_folder_name: "cohesity_folder"
        resource_pool_name: resource_pool
        datastore_name: datastore_name
        endpoint: vcenter.domain.com 
        detach_network: false
        suffix: "_1"
        prefix: "copy_"
      register: task

    - name: Poll for migration status of VMs
      cohesity_migration_status:
        cluster: "{{ cohesity_server }}"
        username: "{{ cohesity_username }}"
        password: "{{ cohesity_password }}"
        validate_certs: "{{ cohesity_validate_certs }}"
        task_id: "{{ task.id }}"
      register: job_result
      until: job_result.status == "Succeeded" or job_result.status == "Canceled" or job_result.status == "Failed" or job_result.status == "OnHold"
      ignore_errors: true
      # This task will poll for 21(retries+1) times with 30 seconds sleep time.
      retries: 20
      delay: 30

    # This task cancels the migration if the number of objects in-sync is less
    # than the total number of vms migrated available in the task.
    - name: Cancel Migration task when more than half of object migration is failed
      cohesity_cancel_migration:
        cluster: "{{ cohesity_server }}"
        username: "{{ cohesity_username }}"
        password: "{{ cohesity_password }}"
        validate_certs: "{{ cohesity_validate_certs }}"
        task_id: "{{ task.id }}"
      when: job_result.status.sync_vms < job_result.status.total_vms/2

    # This task finalise the migration if the number of objects in-sync is greater
    # than the total number of vms migrated available in the task.
    - name: Finalise Migration task when all the objects are In-Sync.
      cohesity_finalize_migration:
        cluster: "{{ cohesity_server }}"
        username: "{{ cohesity_username }}"
        password: "{{ cohesity_password }}"
        validate_certs: "{{ cohesity_validate_certs }}"
        task_id: "{{ task.id }}"
      when: job_result.status.sync_vms >= job_result.status.total_vms/2
